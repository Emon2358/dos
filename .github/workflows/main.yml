name: Create IMG in Workflow, Build, and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 自分のリポジトリのコードをチェックアウト
      - name: Checkout your repository
        uses: actions/checkout@v4

      # 2. DOSBox-Xのソースコードをチェックアウト
      - name: Checkout DOSBox-X source code
        uses: actions/checkout@v4
        with:
          repository: joncampbell123/dosbox-x
          path: dosbox-x-src
          ref: v2024.03.01

      # 3. Emscripten (emsdk)のセットアップ
      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v12
        with:
          version: '3.1.55'

      # 4. ディスクイメージをキャッシュから復元 or 新規作成＆ダウンロード 🚀
      - name: Cache disk images
        id: cache-disks
        uses: actions/cache@v4
        with:
          path: generated-disks # キャッシュするディレクトリ
          key: ${{ runner.os }}-disks-win95-v2 # キーを変更するとキャッシュが作り直されます

      - name: Create/Download disk images if not cached
        if: steps.cache-disks.outputs.cache-hit != 'true'
        run: |
          mkdir -p generated-disks
          echo "Cache not found. Creating a new 2GB disk image..."
          # ▼▼▼ ここで2GBの空のイメージファイルを作成します ▼▼▼
          dd if=/dev/zero of=generated-disks/win95.img bs=1M count=2048
          
          echo "Downloading win95.iso from Releases..."
          # ▼▼▼ あなたのGitHub ReleaseのISO URLに書き換えてください ▼▼▼
          curl -L -o generated-disks/win95.iso "https://github.com/Emon2358/dos/releases/download/win95/win95.iso"
          # ▲▲▲ あなたのGitHub ReleaseのISO URLに書き換えてください ▲▲▲

      # 5. ビルドに必要なライブラリをインストール
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y automake libtool-bin

      # 6. DOSBox-Xのビルド
      - name: Build DOSBox-X with Emscripten
        run: |
          cd dosbox-x-src
          ./autogen.sh
          emconfigure ./configure \
            --host=wasm32-unknown-emscripten --with-sdl2 --enable-static --disable-shared \
            --disable-avcodec --disable-opengl --disable-network --disable-printer --disable-slirp
          emmake make -j$(nproc)
          cd ..

      # 7. GitHub Pages用のアーティファクトを準備
      - name: Prepare artifact for GitHub Pages
        run: |
          mkdir _site
          cp dosbox-x-src/src/dosbox-x.html _site/index.html
          cp dosbox-x-src/src/dosbox-x.js _site/
          cp dosbox-x-src/src/dosbox-x.wasm _site/
          # 作成/復元したディスクイメージをコピー
          mkdir _site/disks
          cp generated-disks/win95.img _site/disks/
          cp generated-disks/win95.iso _site/disks/
          # dosbox.confを自動生成
          echo "[autoexec]
          mount c disks
          imgmount d disks/win95.iso -t iso
          boot c:
          " > _site/dosbox.conf

      # 8. アーティファクトをアップロード
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

      # 9. GitHub Pagesにデプロイ
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
